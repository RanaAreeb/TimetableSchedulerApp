// Generated by view binder compiler. Do not edit!
package com.example.timeatbleschedulerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeatbleschedulerapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddRoomBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final CheckBox cbHasComputers;

  @NonNull
  public final CheckBox cbHasProjector;

  @NonNull
  public final CheckBox cbHasWhiteboard;

  @NonNull
  public final TextInputEditText etCapacity;

  @NonNull
  public final TextInputEditText etRoomName;

  @NonNull
  public final TextInputEditText etRoomNumber;

  @NonNull
  public final Spinner spinnerRoomType;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddRoomBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnSave,
      @NonNull CheckBox cbHasComputers, @NonNull CheckBox cbHasProjector,
      @NonNull CheckBox cbHasWhiteboard, @NonNull TextInputEditText etCapacity,
      @NonNull TextInputEditText etRoomName, @NonNull TextInputEditText etRoomNumber,
      @NonNull Spinner spinnerRoomType, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.cbHasComputers = cbHasComputers;
    this.cbHasProjector = cbHasProjector;
    this.cbHasWhiteboard = cbHasWhiteboard;
    this.etCapacity = etCapacity;
    this.etRoomName = etRoomName;
    this.etRoomNumber = etRoomNumber;
    this.spinnerRoomType = spinnerRoomType;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddRoomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddRoomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_room, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddRoomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.cbHasComputers;
      CheckBox cbHasComputers = ViewBindings.findChildViewById(rootView, id);
      if (cbHasComputers == null) {
        break missingId;
      }

      id = R.id.cbHasProjector;
      CheckBox cbHasProjector = ViewBindings.findChildViewById(rootView, id);
      if (cbHasProjector == null) {
        break missingId;
      }

      id = R.id.cbHasWhiteboard;
      CheckBox cbHasWhiteboard = ViewBindings.findChildViewById(rootView, id);
      if (cbHasWhiteboard == null) {
        break missingId;
      }

      id = R.id.etCapacity;
      TextInputEditText etCapacity = ViewBindings.findChildViewById(rootView, id);
      if (etCapacity == null) {
        break missingId;
      }

      id = R.id.etRoomName;
      TextInputEditText etRoomName = ViewBindings.findChildViewById(rootView, id);
      if (etRoomName == null) {
        break missingId;
      }

      id = R.id.etRoomNumber;
      TextInputEditText etRoomNumber = ViewBindings.findChildViewById(rootView, id);
      if (etRoomNumber == null) {
        break missingId;
      }

      id = R.id.spinnerRoomType;
      Spinner spinnerRoomType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerRoomType == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddRoomBinding((CoordinatorLayout) rootView, btnCancel, btnSave,
          cbHasComputers, cbHasProjector, cbHasWhiteboard, etCapacity, etRoomName, etRoomNumber,
          spinnerRoomType, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
