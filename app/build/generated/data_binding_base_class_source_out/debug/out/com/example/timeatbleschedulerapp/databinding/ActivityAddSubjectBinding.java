// Generated by view binder compiler. Do not edit!
package com.example.timeatbleschedulerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeatbleschedulerapp.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddSubjectBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final CheckBox cbRequiresLab;

  @NonNull
  public final CheckBox cbRequiresProjector;

  @NonNull
  public final TextInputEditText etHoursPerWeek;

  @NonNull
  public final TextInputEditText etSubjectCode;

  @NonNull
  public final TextInputEditText etSubjectName;

  @NonNull
  public final Spinner spinnerSubjectType;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddSubjectBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnCancel, @NonNull MaterialButton btnSave,
      @NonNull CheckBox cbRequiresLab, @NonNull CheckBox cbRequiresProjector,
      @NonNull TextInputEditText etHoursPerWeek, @NonNull TextInputEditText etSubjectCode,
      @NonNull TextInputEditText etSubjectName, @NonNull Spinner spinnerSubjectType,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.cbRequiresLab = cbRequiresLab;
    this.cbRequiresProjector = cbRequiresProjector;
    this.etHoursPerWeek = etHoursPerWeek;
    this.etSubjectCode = etSubjectCode;
    this.etSubjectName = etSubjectName;
    this.spinnerSubjectType = spinnerSubjectType;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddSubjectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddSubjectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_subject, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddSubjectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.cbRequiresLab;
      CheckBox cbRequiresLab = ViewBindings.findChildViewById(rootView, id);
      if (cbRequiresLab == null) {
        break missingId;
      }

      id = R.id.cbRequiresProjector;
      CheckBox cbRequiresProjector = ViewBindings.findChildViewById(rootView, id);
      if (cbRequiresProjector == null) {
        break missingId;
      }

      id = R.id.etHoursPerWeek;
      TextInputEditText etHoursPerWeek = ViewBindings.findChildViewById(rootView, id);
      if (etHoursPerWeek == null) {
        break missingId;
      }

      id = R.id.etSubjectCode;
      TextInputEditText etSubjectCode = ViewBindings.findChildViewById(rootView, id);
      if (etSubjectCode == null) {
        break missingId;
      }

      id = R.id.etSubjectName;
      TextInputEditText etSubjectName = ViewBindings.findChildViewById(rootView, id);
      if (etSubjectName == null) {
        break missingId;
      }

      id = R.id.spinnerSubjectType;
      Spinner spinnerSubjectType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerSubjectType == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddSubjectBinding((CoordinatorLayout) rootView, btnCancel, btnSave,
          cbRequiresLab, cbRequiresProjector, etHoursPerWeek, etSubjectCode, etSubjectName,
          spinnerSubjectType, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
