// Generated by view binder compiler. Do not edit!
package com.example.timeatbleschedulerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeatbleschedulerapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardCoordinatorBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialCardView cardAssignTimetable;

  @NonNull
  public final MaterialCardView cardGenerateTimetable;

  @NonNull
  public final MaterialCardView cardManageNotifications;

  @NonNull
  public final MaterialCardView cardViewReports;

  @NonNull
  public final FloatingActionButton fabQuickAction;

  @NonNull
  public final ImageView ivProfileImage;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvTotalBatches;

  @NonNull
  public final TextView tvTotalStudents;

  @NonNull
  public final TextView tvUserName;

  private ActivityDashboardCoordinatorBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialCardView cardAssignTimetable,
      @NonNull MaterialCardView cardGenerateTimetable,
      @NonNull MaterialCardView cardManageNotifications, @NonNull MaterialCardView cardViewReports,
      @NonNull FloatingActionButton fabQuickAction, @NonNull ImageView ivProfileImage,
      @NonNull MaterialToolbar toolbar, @NonNull TextView tvTotalBatches,
      @NonNull TextView tvTotalStudents, @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.cardAssignTimetable = cardAssignTimetable;
    this.cardGenerateTimetable = cardGenerateTimetable;
    this.cardManageNotifications = cardManageNotifications;
    this.cardViewReports = cardViewReports;
    this.fabQuickAction = fabQuickAction;
    this.ivProfileImage = ivProfileImage;
    this.toolbar = toolbar;
    this.tvTotalBatches = tvTotalBatches;
    this.tvTotalStudents = tvTotalStudents;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardCoordinatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardCoordinatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard_coordinator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardCoordinatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardAssignTimetable;
      MaterialCardView cardAssignTimetable = ViewBindings.findChildViewById(rootView, id);
      if (cardAssignTimetable == null) {
        break missingId;
      }

      id = R.id.cardGenerateTimetable;
      MaterialCardView cardGenerateTimetable = ViewBindings.findChildViewById(rootView, id);
      if (cardGenerateTimetable == null) {
        break missingId;
      }

      id = R.id.cardManageNotifications;
      MaterialCardView cardManageNotifications = ViewBindings.findChildViewById(rootView, id);
      if (cardManageNotifications == null) {
        break missingId;
      }

      id = R.id.cardViewReports;
      MaterialCardView cardViewReports = ViewBindings.findChildViewById(rootView, id);
      if (cardViewReports == null) {
        break missingId;
      }

      id = R.id.fabQuickAction;
      FloatingActionButton fabQuickAction = ViewBindings.findChildViewById(rootView, id);
      if (fabQuickAction == null) {
        break missingId;
      }

      id = R.id.ivProfileImage;
      ImageView ivProfileImage = ViewBindings.findChildViewById(rootView, id);
      if (ivProfileImage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvTotalBatches;
      TextView tvTotalBatches = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalBatches == null) {
        break missingId;
      }

      id = R.id.tvTotalStudents;
      TextView tvTotalStudents = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalStudents == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new ActivityDashboardCoordinatorBinding((CoordinatorLayout) rootView,
          cardAssignTimetable, cardGenerateTimetable, cardManageNotifications, cardViewReports,
          fabQuickAction, ivProfileImage, toolbar, tvTotalBatches, tvTotalStudents, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
