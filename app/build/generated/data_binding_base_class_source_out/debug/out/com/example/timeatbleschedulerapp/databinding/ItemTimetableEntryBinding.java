// Generated by view binder compiler. Do not edit!
package com.example.timeatbleschedulerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeatbleschedulerapp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTimetableEntryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView tvDay;

  @NonNull
  public final TextView tvGroupId;

  @NonNull
  public final TextView tvRoomId;

  @NonNull
  public final TextView tvStudents;

  @NonNull
  public final TextView tvSubjectName;

  @NonNull
  public final TextView tvTeacherName;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvType;

  private ItemTimetableEntryBinding(@NonNull MaterialCardView rootView, @NonNull TextView tvDay,
      @NonNull TextView tvGroupId, @NonNull TextView tvRoomId, @NonNull TextView tvStudents,
      @NonNull TextView tvSubjectName, @NonNull TextView tvTeacherName, @NonNull TextView tvTime,
      @NonNull TextView tvType) {
    this.rootView = rootView;
    this.tvDay = tvDay;
    this.tvGroupId = tvGroupId;
    this.tvRoomId = tvRoomId;
    this.tvStudents = tvStudents;
    this.tvSubjectName = tvSubjectName;
    this.tvTeacherName = tvTeacherName;
    this.tvTime = tvTime;
    this.tvType = tvType;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTimetableEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTimetableEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_timetable_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTimetableEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvDay;
      TextView tvDay = ViewBindings.findChildViewById(rootView, id);
      if (tvDay == null) {
        break missingId;
      }

      id = R.id.tvGroupId;
      TextView tvGroupId = ViewBindings.findChildViewById(rootView, id);
      if (tvGroupId == null) {
        break missingId;
      }

      id = R.id.tvRoomId;
      TextView tvRoomId = ViewBindings.findChildViewById(rootView, id);
      if (tvRoomId == null) {
        break missingId;
      }

      id = R.id.tvStudents;
      TextView tvStudents = ViewBindings.findChildViewById(rootView, id);
      if (tvStudents == null) {
        break missingId;
      }

      id = R.id.tvSubjectName;
      TextView tvSubjectName = ViewBindings.findChildViewById(rootView, id);
      if (tvSubjectName == null) {
        break missingId;
      }

      id = R.id.tvTeacherName;
      TextView tvTeacherName = ViewBindings.findChildViewById(rootView, id);
      if (tvTeacherName == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tvType;
      TextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      return new ItemTimetableEntryBinding((MaterialCardView) rootView, tvDay, tvGroupId, tvRoomId,
          tvStudents, tvSubjectName, tvTeacherName, tvTime, tvType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
