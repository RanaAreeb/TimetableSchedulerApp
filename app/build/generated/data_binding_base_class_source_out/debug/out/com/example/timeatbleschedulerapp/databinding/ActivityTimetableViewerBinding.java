// Generated by view binder compiler. Do not edit!
package com.example.timeatbleschedulerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.timeatbleschedulerapp.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTimetableViewerBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewTimetable;

  @NonNull
  public final TabLayout tabLayoutDays;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView tvNoTimetable;

  private ActivityTimetableViewerBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView recyclerViewTimetable,
      @NonNull TabLayout tabLayoutDays, @NonNull MaterialToolbar toolbar,
      @NonNull TextView tvNoTimetable) {
    this.rootView = rootView;
    this.progressBar = progressBar;
    this.recyclerViewTimetable = recyclerViewTimetable;
    this.tabLayoutDays = tabLayoutDays;
    this.toolbar = toolbar;
    this.tvNoTimetable = tvNoTimetable;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTimetableViewerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTimetableViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_timetable_viewer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTimetableViewerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycler_view_timetable;
      RecyclerView recyclerViewTimetable = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTimetable == null) {
        break missingId;
      }

      id = R.id.tab_layout_days;
      TabLayout tabLayoutDays = ViewBindings.findChildViewById(rootView, id);
      if (tabLayoutDays == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_no_timetable;
      TextView tvNoTimetable = ViewBindings.findChildViewById(rootView, id);
      if (tvNoTimetable == null) {
        break missingId;
      }

      return new ActivityTimetableViewerBinding((CoordinatorLayout) rootView, progressBar,
          recyclerViewTimetable, tabLayoutDays, toolbar, tvNoTimetable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
